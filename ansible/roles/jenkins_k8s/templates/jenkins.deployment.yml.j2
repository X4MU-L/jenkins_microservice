apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: {{ jenkins_namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      serviceAccountName: jenkins
      
      initContainers:
        - name: install-plugins
          image: jenkins/jenkins:lts
          command: ["/bin/sh", "-c"]
          volumeMounts:
            - name: jenkins-home
              mountPath: /var/jenkins_home
            - name: plugins-init
              mountPath: /var/jenkins_plugins/plugins.txt
              subPath: plugins.txt
          args:
            - |
              echo "Installing Jenkins plugins..."
              mkdir -p /var/jenkins_home/plugins

              RETRY_COUNT=0
              MAX_RETRIES=5

              install_plugins() {
                  echo "Installing $plugin..."
                  # Explicitly set the plugin directory
                  jenkins-plugin-cli --plugin-file /var/jenkins_plugins/plugins.txt \
                   --plugin-download-directory=/var/jenkins_home/plugins || return 1
              }

              while ! install_plugins; do
                RETRY_COUNT=$((RETRY_COUNT+1))
                echo "Plugin installation failed. Retrying ($RETRY_COUNT/$MAX_RETRIES)..."
                if [ "$RETRY_COUNT" -ge "$MAX_RETRIES" ]; then
                  echo "Max retries reached. Plugin installation failed."
                  exit 1
                fi
                sleep 5
              done

              echo "Plugin installation completed successfully."

      containers:
        - name: jenkins
          image: jenkins/jenkins:lts
          ports:
            - containerPort: 8080
              name: web
            - containerPort: 50000
              name: agent
            - containerPort: 22
              name: ssh
          volumeMounts:
            - name: jenkins-home
              mountPath: /var/jenkins_home
            - name: plugins-init
              mountPath: /var/jenkins_plugins/plugins.txt
              subPath: plugins.txt
            - name: init-scripts
              mountPath: /usr/share/jenkins/ref/init.groovy.d/
            - name: jenkins-function-scripts
              mountPath: /var/jenkins_home/function_scripts/
            - name: ssh-key-volume
              mountPath: {{ jenkins_ssh_dir }}/keys/
            - name: ssh-config-volume
              mountPath: {{ jenkins_ssh_dir }}/
              readOnly: false
          env:
            - name: JAVA_OPTS
              value: "-Djenkins.install.runSetupWizard=false"
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo "Starting Jenkins..."
              echo "Waiting for plugins..."
              while [ ! -d "/var/jenkins_home/plugins" ]; do
                echo "Plugins directory not found. Retrying..."
                sleep 5
              done

              echo "Ensuring init scripts directory exists..."
              mkdir -p /var/jenkins_home/init.groovy.d
              
              echo "Running Jenkins..."
              exec /usr/bin/tini -- /usr/local/bin/jenkins.sh

      volumes:
        - name: jenkins-home
          persistentVolumeClaim:
            claimName: jenkins-pvc
        - name: plugins-init
          configMap:
            name: jenkins-plugins
        - name: init-scripts
          configMap:
            name: jenkins-init-scripts
        - name: ssh-config-volume
          configMap:
            name: jenkins-ssh-config
        - name: jenkins-function-scripts
          configMap:
            name: jenkins-function-scripts
        - name: ssh-key-volume
          secret:
            secretName: {{ secret_name_volume_key }}

---
apiVersion: v1
kind: Service
metadata:
  name: jenkins
  namespace: {{ jenkins_namespace }}
spec:
  type: NodePort
  ports:
    - port: {{ container_port }}
      targetPort: 8080
      nodePort: {{ node_port }}
      name: web
    - port: {{ agent_port }}
      targetPort: 50000
      nodePort: {{ agent_node_port }}
      name: agent
    - port: {{ jenkins_ssh_port }}
      targetPort: 22
      nodePort: {{ ssh_node_port }}
      name: ssh
  selector:
    app: jenkins
